"use client"

import localFont from "next/font/local";
import "./globals.css";
import { useState } from "react";
import AppContext from "./contexts/appContext";
import Link from "next/link";
import { loadStripe } from "@stripe/stripe-js";
import { Elements } from "@stripe/react-stripe-js";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({ children }) {
  const [cart, setCart] = useState({})
  function addItem(item) {
    setCart((prevCart) => {
      return {
        ...prevCart,
        [item._id]: {
          item: item,
          quantity: (prevCart[item._id]?.quantity || 0) + 1
        }
      }
    })
  }
  function removeItem(item) {
    setCart((prevCart) => {
      if (prevCart[item._id].quantity === 1) {
        return JSON.parse(JSON.stringify({
          ...prevCart,
          [item._id]: undefined
        }))
      }
      return {
        ...prevCart,
        [item._id]: {
          item: item,
          quantity: prevCart[item._id].quantity - 1
        }
      }
    })
  }
  const cartTotal = Object.values(cart).reduce((acc, { item, quantity }) => {
    return acc + item.price * quantity
  }, 0)
  const stripePromise = loadStripe(
    "pk_test_51Q2POHGKYIRo5d8xgrCX8E4gMD1p36nwBlZgz1AruyuhHjdNYNrZ1YwC3zxdoP02Xg295CUOHeWGp5s6FqcfY8i900zEKXXOqi"
  );
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} page-layout`}>
        <h1>Restaurant App</h1>
        <AppContext.Provider value={{ addItem: addItem, cart: cart, removeItem: removeItem, cartTotal: cartTotal }}>
          <Elements stripe={stripePromise}>
            {children}
          </Elements>
        </AppContext.Provider>
      </body>
    </html>
  );
}
